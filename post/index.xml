<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Zhixing DevOps Tips</title>
    <link>https://zhixingchou.github.io/post/</link>
    <description>Recent content in Posts on Zhixing DevOps Tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 30 Sep 2019 01:37:56 +0800</lastBuildDate>
    
	<atom:link href="https://zhixingchou.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Theme preview</title>
      <link>https://zhixingchou.github.io/post/even-preview/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/even-preview/</guid>
      <description>Based on MarkdownPreview test.md. Markdown 1 2 3 4 5 6 7 8 # H1 ## H2 ### H3 #### H4 ##### H5 ###### H6 ### Duplicate Header ### Duplicate Header H1 H2 H3 H4 H5 H6 Duplicate Header Duplicate Header Paragraphs 1 2 3 4 This is a paragraph. I am still part of the paragraph. New paragraph. This is a paragraph. I am still part of the paragraph.</description>
    </item>
    
    <item>
      <title>test-post-2</title>
      <link>https://zhixingchou.github.io/post/my-test-post-2/</link>
      <pubDate>Mon, 30 Sep 2019 01:37:56 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/my-test-post-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>源代码</title>
      <link>https://zhixingchou.github.io/post/%E6%BA%90%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sun, 07 Jul 2019 22:28:34 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/%E6%BA%90%E4%BB%A3%E7%A0%81/</guid>
      <description>Tips 喜欢这种从出现到发展、由浅入深、由一小段代码讲述某种实现的讲述，既容易理解，也深入了解了原理。娓娓道来，很有条理，就像身临当时docker</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://zhixingchou.github.io/post/Docker/</link>
      <pubDate>Fri, 04 Jan 2019 01:37:56 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Docker/</guid>
      <description> Docker Docker log https://balagetech.com/simplified-logging-docker-elasticsearch-syslog-ng/
  google （docker syslog logs locally）
 chose the journald driver over syslog because：xxx
   </description>
    </item>
    
    <item>
      <title>This is a hidden post.</title>
      <link>https://zhixingchou.github.io/post/hidden-post/</link>
      <pubDate>Thu, 08 Mar 2018 17:40:19 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/hidden-post/</guid>
      <description>&lt;p&gt;This post is hidden from the home page.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[English] Creating a New Theme</title>
      <link>https://zhixingchou.github.io/post/english-preview/</link>
      <pubDate>Thu, 31 Aug 2017 15:43:48 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/english-preview/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>[日本語] 敬語体系</title>
      <link>https://zhixingchou.github.io/post/japanese-preview/</link>
      <pubDate>Wed, 30 Aug 2017 01:53:34 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/japanese-preview/</guid>
      <description>日本語の敬語体系は、一般に、大きく尊敬語・謙譲語・丁寧語に分類される。文化審議会国語分科会は、2007年2月に「敬語の指針」を答申し、これに</description>
    </item>
    
    <item>
      <title>[中文] 《长恨歌》</title>
      <link>https://zhixingchou.github.io/post/chinese-preview/</link>
      <pubDate>Wed, 30 Aug 2017 01:37:56 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/chinese-preview/</guid>
      <description>《长恨歌》是中国唐朝诗人白居易的一首长篇叙事诗。 第一段：贵妃受宠爱 汉皇重色思倾国，御宇多年求不得。杨家有女初长成，养在深闺人未识。 天生丽质难</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>https://zhixingchou.github.io/post/shortcodes/</link>
      <pubDate>Tue, 30 Aug 2016 16:01:23 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/shortcodes/</guid>
      <description>&lt;h1 id=&#34;admonition&#34;&gt;Admonition&lt;/h1&gt;

&lt;div class=&#34;admonition note&#34;&gt;&lt;p class=&#34;admonition-title&#34;&gt;I&amp;#39;m title!&lt;/p&gt;
  
biu biu biu.

&lt;details class=&#34;admonition note&#34;&gt;&lt;summary class=&#34;admonition-title&#34;&gt;note&lt;/summary&gt;
  &lt;p&gt;biu biu biu.&lt;/p&gt;

&lt;/details&gt;

&lt;div class=&#34;admonition example&#34;&gt;
  &lt;p&gt;Without title.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;{{% admonition note &amp;#34;I&amp;#39;m title!&amp;#34; false %}}
biu biu biu.

{{% admonition type=&amp;#34;note&amp;#34; title=&amp;#34;note&amp;#34; details=&amp;#34;true&amp;#34; %}}
biu biu biu.
{{% /admonition %}}

{{% admonition example %}}
Without title.
{{% /admonition %}}

{{% /admonition %}}&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>JS Flowchart Diagrams -- template</title>
      <link>https://zhixingchou.github.io/post/js-flowchart-diagrams/</link>
      <pubDate>Wed, 04 Mar 2015 21:57:50 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/js-flowchart-diagrams/</guid>
      <description>&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-flow&#34; data-lang=&#34;flow&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-flow&#34; data-lang=&#34;flow&#34;&gt;st=&amp;gt;start: Start|past:&amp;gt;http://www.google.com[blank]
e=&amp;gt;end: End:&amp;gt;http://www.google.com
op1=&amp;gt;operation: My Operation|past
op2=&amp;gt;operation: Stuff|current
sub1=&amp;gt;subroutine: My Subroutine|invalid
cond=&amp;gt;condition: Yes
or No?|approved:&amp;gt;http://www.google.com
c2=&amp;gt;condition: Good idea|rejected
io=&amp;gt;inputoutput: catch something...|request

st-&amp;gt;op1(right)-&amp;gt;cond
cond(yes, right)-&amp;gt;c2
cond(no)-&amp;gt;sub1(left)-&amp;gt;op1
c2(yes)-&amp;gt;io-&amp;gt;e
c2(no)-&amp;gt;op2-&amp;gt;e&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>JS Sequence Diagrams -- template</title>
      <link>https://zhixingchou.github.io/post/js-sequence-diagrams/</link>
      <pubDate>Wed, 04 Mar 2015 21:57:45 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/js-sequence-diagrams/</guid>
      <description>&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sequence&#34; data-lang=&#34;sequence&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sequence&#34; data-lang=&#34;sequence&#34;&gt;Andrew-&amp;gt;China: Says Hello
Note right of China: China thinks\nabout it
China--&amp;gt;Andrew: How are you?
Andrew-&amp;gt;&amp;gt;China: I am good thanks!&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Syntax Highlighting</title>
      <link>https://zhixingchou.github.io/post/syntax-highlighting/</link>
      <pubDate>Tue, 30 Aug 2011 16:01:23 +0800</pubDate>
      
      <guid>https://zhixingchou.github.io/post/syntax-highlighting/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;helloWorld&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Architecture/k8s-architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Architecture/k8s-architecture/</guid>
      <description>k8s-contributors
Kubernetes Architectural Roadmap
Kubernetes Design and Architecture</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Article/devops-articles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Article/devops-articles/</guid>
      <description>Mini Guide to Google’s Golang and Why It’s Perfect for DevOps https://www.bluematador.com/blog/mini-guide-google-golang-why-its-perfect-for-devops?utm_source=bm-blog&amp;utm_medium=link&amp;utm_campaign=golang-pros-cons-1 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Article/go-articles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Article/go-articles/</guid>
      <description>Golang 之于 DevOps 开发的利与弊（六部曲之一）：Goroutines, Channels, Panics, 和 Errors https://studygolang.com/articles/11983 Go Lang＆DevOps-天造地设？ https://medium.com/@pavanbelagatti/go-lang-devops-a-match-made-in-heaven-a24d5de45e26 [使用Go作为NodeSource的基础结构语言](使用Go作为NodeSource的基础结构语言) ``` A few additional modules which I consider to be very important for writing Go programs include: cobra and viper make it very easy to create software that supports loading configuration files and having command-line switches. Any moderately-important software should have at minimum CLI switches, and any really important software should probably load its configuration from a JSON or YAML file.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Article/k8s-articles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Article/k8s-articles/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Book/book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Book/book/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Hugo-Github-pages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Hugo-Github-pages/</guid>
      <description>posts https://juejin.im/post/5cc41bfef265da036505031c
https://zhuanlan.zhihu.com/p/57361697</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Interesting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Interesting/</guid>
      <description> Interesting mac for docker 但是同一个页面，在linux上面的时候需要4秒，在mac for docker上面需要25秒
 https://ruby-china.org/topics/37289
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/K8S/Kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/K8S/Kubernetes/</guid>
      <description>Kubernetes 安装 参考链接
https://github.com/rootsongjc/kubernetes-vagrant-centos-cluster/blob/master/README-cn.md
 Mac OS 测试可以安装，使用代理下载安装包快
 roadmap article
https://time.geekbang.org/column/intro/116
安装 kubeadm
 到目前为止（2018 年 9 月），这个问题的答案是：不能。
极客时间版权所有: https://time.geekbang.org/column/article/39712
想咨询下kubeadm适合生产环境安装集群么
作者回复: 小规模可以。
张老师，后面能讲讲怎么用二进制部署kubernetes吗？毕竟kubeadm不适用于生产环境，用二进制部署还是挺复杂的，恳请老师不吝讲解一下吧。
 作者回复: 我不建议直接使用二进制文件部署。而建议你花时间了解一下kubeadm的高可用部署，它现在已经初具雏形了。宝贵的时间应该用在刀刃上。
https://time.geekbang.org/column/article/39712
  kops
 如果你有部署规模化生产环境的需求，我推荐使用kops或者SaltStack 这样更复杂的部署工具。
极客时间版权所有: https://time.geekbang.org/column/article/39712
 ansible
 https://github.com/easzlab/kubeasz
 install on macos
 请问一下在MacBook上安装部署k8s要怎么做？
 作者回复: minikube
https://time.geekbang.org/column/article/39712
  operator 深入剖析Kubernetes
 技能图谱
 https://static001.geekbang.org/resource/image/0d/cb/0da944e5bac4fe1d00d3f01a747e86cb.jpg
best article 学习 Kubernetes 和容器技术体系的最佳方法
Tips  （swarm）
试用Rancher搭建过一个环境，感觉过程和kubeadm有些类似，主节点初始化生成token，其它节点通过token来进行join，而且是图形化。对于部署、运维能力都有限的中小企业来说，是否可以考虑这些非原生的部署方案？甚至是否可以考虑docker swarm呢？麻烦给个建议。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/K8S/minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/K8S/minikube/</guid>
      <description>windows https://www.cnblogs.com/codelove/p/11163581.html
 报错（可能是 windows 企业版系统有问题，不能安装 Hyper-V）
 https://blog.csdn.net/cckevincyh/article/details/93356671
 配置 minikube.exe https://medium.com/faun/minikube-installation-on-windows-10-9908d17cfad9
下载失败
1  minikube.exe start --registry-mirror=https://registry.docker-cn.com --vm-driver=&amp;#34;virtualbox&amp;#34; --memory=3072 --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers   ubuntu ubuntu 18</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/K8S/rancher/ubuntu_install_rancher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/K8S/rancher/ubuntu_install_rancher/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11  -------- 1. install docker ```shell 13 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 14 vim /etc/docker/daemon.json 15 /etc/init.d/docker reload 16 docker ps 17 mkdir /opt/rancher 18 docker run -d --restart=unless-stopped -p 80:80 -p 443:443 -v /opt/rancher:/var/lib/rancher rancher/rancher:latest  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Keys-begin-2019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Keys-begin-2019/</guid>
      <description>Keys Prometheus 关系型数据库采用B+树，时序数据库通常采用LSM树</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Keyword/keyword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Keyword/keyword/</guid>
      <description>Golang for DevOps Applications
go 微服务
go 高并发
go 分布式高可用
Building DevOps Tools
internals
prometheus storage
source code
deep understand
deep dive into
core
core concepts
details of how things work
best-practice
improve
This document describes the ongoing architectural development of the Kubernetes system, and the motivations behind it.
 本文档描述了Kubernetes系统正在进行的体系结构开发及其背后的动机。
 System developers wanting to extend or customize Kubernetes should use this document as a guide to inform where and how best to implement these enhancements.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/MacOS/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/MacOS/</guid>
      <description> MacOS iTerm2
 命令输出结果不换行   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Monitor-method/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Monitor-method/</guid>
      <description> Monitor method RED method https://grafana.com/files/grafanacon_eu_2018/Tom_Wilkie_GrafanaCon_EU_2018.pdf
USE method </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Paper/prometheus-papers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Paper/prometheus-papers/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Papers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Papers/</guid>
      <description>Papers Google http://malteschwarzkopf.de/research/assets/google-stack.pdf</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Project/projects-golang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Project/projects-golang/</guid>
      <description>Smoke Your Server Using Goroutines</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Prometheus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Prometheus/</guid>
      <description>prometheus resources Alertmanager
Alertmanager 内部架构
  Dispatcher 中的 Routing Tree 的实现与设计意图 Notification Pipeline 的实现与设计意图 Alertmanager 整体的设计意图就是奔着治理警报（通知）去的，首先它用 Routing Tree 来帮助用户定义警报的归类与发送逻辑，然后再用 Notification Pipeline 来做抑制、静默、去重以提升警报质量。这些功能虽然不能解决”警报”这件事中所有令人头疼的问题，但确实为我们着手去解决”警报质量”相关问题提供了趁手的工具。   https://aleiwu.com/post/alertmanager/
Websites Slides 2018 12 12 Prometheus Deep Dive
2019-04-08--Prometheus_what_the_hype_is_about.pdf</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/README/</guid>
      <description> Monitor_begin_2019 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Read-Summary/Distributed-github_feixiao_Distributed-Systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Read-Summary/Distributed-github_feixiao_Distributed-Systems/</guid>
      <description> Lec01_Introduction 主题：实现(implementation)  RPC, threads, concurrency control.  Lec02_RPC_and_Threads  分布式系统的关键部分，全面的实验都使用RPC.
 RPC的目的：
 容易编写网络通信程序 隐藏客户端服务器通信的细节 客户端调用更加像传统的过程调用 服务端处理更加像传统的过程调用  RPC被广泛的使用！
  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Resources/</guid>
      <description> Resources web urls </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Source-Code/k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Source-Code/k8s/</guid>
      <description>Cobra command framework
https://developer.ibm.com/opentech/2017/06/21/tour-kubernetes-source-code-part-one-kubectl-api-server/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Terraform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Terraform/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Todo-begin-2019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Todo-begin-2019/</guid>
      <description>Todo -- begin 2019 使用按使用时长计费的云主机搭建测试环境
 了解不同云主机价格和性能
 http://codecapsule.com/
 It’s easy to bring up a dozen of servers on DigitalOcean or Amazon Web Services. At the time I’m writing this article, the smallest instance on DigitalOcean is $0.17 per day. Yes, 17 cents per day for a server. So you can bring up a cluster of 15 servers for a weekend to play with, and that will cost you only $5.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Tool-tmux/Tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Tool-tmux/Tmux/</guid>
      <description> macos
 Mac install tmux
1 2 3  # 墙，不能下载；复制终端代理命令 # 取消临时代理命令 unset brew install tmux	   使用 gpakosz/.tmux 配置文件
1 2 3 4 5  tips: 鼠标不能滚动 修改配置文件 vim .tmux/.tmux.conf set -g mouse on tmux source-file .tmux/.tmux.conf  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Tool-tmux/custom-tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Tool-tmux/custom-tmux/</guid>
      <description>参考链接
http://www.scutmath.com/tmux_session_save_restore.html
cat ~/.tmux.conf
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  set-option -g allow-rename off set-window-option -g mode-keys vi set -g prefix C-a unbind C-b bind C-a send-prefix # 开启鼠标模式 set -g mouse on # List of plugins set -g @plugin &amp;#39;tmux-plugins/tpm&amp;#39; set -g @plugin &amp;#39;tmux-plugins/tmux-sensible&amp;#39; set -g @plugin &amp;#39;tmux-plugins/tmux-resurrect&amp;#39; set -g @plugin &amp;#39;tmux-plugins/tmux-continuum&amp;#39; # Other examples: # set -g @plugin &amp;#39;github_username/plugin_name&amp;#39; # set -g @plugin &amp;#39;git@github.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Tools/</guid>
      <description> Tools zeromake/docker-debug
 在容器没有安装/bin/sh &amp;amp;&amp;amp; /bin/bash，不能使用exec进入到容器调试时，使用该工具
 rss订阅(Blog)工具--Reeder
 ios客户端
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Tools/oh-my-zsh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Tools/oh-my-zsh/</guid>
      <description>aws lightsai
https://lentil1016.cn/create-aws-lightsail-instance-using-terraform/
https://zhuanlan.zhihu.com/p/50313467</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Trace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Trace/</guid>
      <description>Trace Linux问题分析与性能优化 https://www.lijiaocn.com/linux/chapter1/
 记录Linux相关的知识，性能优化部分的内容主要来自极客时间出品的倪鹏飞专栏《Linux性能优化》
 BCC （bpf compiler collection）  Tools for BPF-based Linux IO analysis, networking, monitoring, and more
 https://github.com/iovisor/bcc
https://iovisor.github.io/bcc/
 execsnoop  https://blog.51cto.com/liuzhengwei521/2419139?source=dra
https://blog.51cto.com/liuzhengwei521/2419139
 在实际工作中，偶尔会遇到系统的CPU使用率和系统平均负载很高，但却找不到高CPU的应用；产生这个问题的原因：进程有可能在不断的崩溃、重启
 https://www.liritian.com/2019/04/02/linux-baidu/
 假设我们有这样一个场景，系统中偶尔会运行新的进程，这些新的进程可能会消耗大量系统资源，从而对我们生产上运行的环境产生干扰，但是这种进程可能运行时间极为短暂，我们怎样才能知道发生了这种情况呢？top？可能不行，时间太短了，可能top还没来得及统计，进程已经退出了。这种情况下最适合使用的工具之一就是BCC工具集中的execsnoop，图中可以看出，每一个新启动的进程都会被记录在案
 https://www.cnblogs.com/pugang/p/10009896.html
https://yq.aliyun.com/articles/590865
 抓取当前活跃的进程。特别是一闪而过的短命进程,以及进程的返回值和其参数。这个工具跟踪了execute系统调用，在创建新进程的时候是fork-&amp;gt;exec的，当exec时候就会被抓住，有些应用只有fork没有执行exec就不会被抓到。加上-x参数就可以抓到exec失败的进程。参数-t可以打印出时间戳，-n参数可以进行名字过滤。参数-l可以识别进程的指定参数。
 安装
https://zhuanlan.zhihu.com/p/57579051
BPFtrace  (https://github.com/iovisor/bpftrace) (https://github.com/iovisor/bpftrace/blob/master/docs/tutorial_one_liners.md) (https://github.com/iovisor/bpftrace/blob/master/docs/reference_guide.md) (https://github.com/iovisor/bcc)  book
http://www.brendangregg.com/bpf-performance-tools-book.html
bpftrace Reference Guide
https://github.com/iovisor/bpftrace/blob/master/docs/reference_guide.md
About people
 Alexei Starovoitov  @alexei_ast
 Brendan Gregg   基于eBPF做性能工具研发的工作，比如bcc工具集，最近又参与了bpftrace的工具</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Ubnt-tmp-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Ubnt-tmp-files/</guid>
      <description>Ubnt-tmp-files Log http://www.tothenew.com/blog/tweaking-logstashs-s3-plugin-to-create-folders-in-yyyymmdd-format-on-aws-s3/
https://github.com/logstash-plugins/logstash-output-s3/pull/17
https://stackoverflow.com/questions/36594709/logstash-to-s3-prefix-doesnt-work-properly/36613787
https://github.com/logstash-plugins/logstash-output-s3/pull/102
https://github.com/logstash-plugins/logstash-output-s3/issues/168
https://gist.github.com/mapps-fujisawa/0b8d09452ae3c5b3868df7338ab5aa96
 docker logs to s3 — 使用 minio 模拟 amazon s3  https://github.com/logstash-plugins/logstash-output-s3/issues/180</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/Vagrant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/Vagrant/</guid>
      <description>Vagrant 常用命令 https://juejin.im/entry/5c6a6da5f265da2de52d7d7c
1. vagrant box基本命令  列出本地环境中所有的box
1  vagrant box list   添加box到本地vagrant环境
1  vagrant box add box-name(box-url)   更新本地环境中指定的box
1  vagrant box update box-name   删除本地环境中指定的box
1  vagrant box remove box-name    重新打包本地环境中指定的box
1  vagrant box repackage box-name   2. vagrant基本命令  在空文件夹初始化虚拟机
1  vagrant init [box-name]   在初始化完的文件夹内启动虚拟机
1  vagrant up   ssh登录启动的虚拟机</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhixingchou.github.io/post/healthycheck%E5%AE%B9%E5%99%A8%E4%BD%BF%E7%94%A8%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhixingchou.github.io/post/healthycheck%E5%AE%B9%E5%99%A8%E4%BD%BF%E7%94%A8%E5%AE%BF%E4%B8%BB%E6%9C%BA%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/</guid>
      <description>1  curl --socks5 127.0.0.1:1080 www.google.com   docker 容器内使用宿主机的代理配置
https://kebingzao.com/2019/02/22/docker-container-proxy/
容器内使用（http）代理
容器安装privoxy
 docker-shadowsocks-libev-obfs-privoxy
 https://zrstea.com/245/</description>
    </item>
    
  </channel>
</rss>